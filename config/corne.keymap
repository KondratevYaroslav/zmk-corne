/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        esc: esc {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
        };

        tilda: tilda {
            compatible = "zmk,behavior-hold-tap";
            label = "TILDA";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&esc LEFT_GUI ESCAPE  &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O    &kp P     &kp LEFT_BRACKET
&kp TAB               &kp A  &kp S  &kp D      &kp F  &kp G        &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp RIGHT_BRACKET
&kp LSHFT             &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp SQT
                                    &kp LCTRL  &mo 1  &kp ENTER    &kp SPACE  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&tilda LGUI TILDE  &kp PERCENT  &kp HASH         &kp DOLLAR     &kp CARET             &kp UNDERSCORE           &kp MINUS  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9  &kp PLUS      &kp EQUAL
&kp TAB            &kp AT       &kp EXCLAMATION  &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp ASTRK  &kp NUMBER_4  &kp NUMBER_5   &kp NUMBER_6  &kp NUMBER_0  &kp RCTRL
&kp LSHFT          &trans       &trans           &trans         &kp BACKSLASH         &kp DELETE               &kp SLASH  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp KP_DOT    &kp LEFT_ALT
                                                 &kp LCTRL      &trans                &kp ENTER                &kp SPACE  &trans        &kp BACKSPACE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp F1  &kp F2   &kp F3     &kp F4   &kp C_VOLUME_UP    &kp PAGE_UP    &kp HOME    &kp UP            &kp END     &kp BACKSPACE  &kp DELETE
&kp LCTRL  &kp F5  &kp F6   &kp F7     &kp F8   &kp K_MUTE         &kp PAGE_DOWN  &kp LEFT    &kp DOWN          &kp RIGHT   &trans         &kp PRINTSCREEN
&kp LSHFT  &kp F9  &kp F10  &kp F11    &kp F12  &kp C_VOL_DN       &trans         &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans         &kp LEFT_ALT
                            &kp LCTRL  &trans   &kp SPACE          &kp RET        &trans      &kp BACKSPACE
            >;
        };

        Adjust_layer {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &trans  &kp INS  &kp CAPSLOCK  &kp KP_NUM  &trans  &trans
&out OUT_TOG  &trans        &trans        &trans        &trans        &ext_power EP_ON     &trans  &trans   &trans        &trans      &trans  &trans
&trans        &trans        &trans        &trans        &trans        &ext_power EP_OFF    &trans  &trans   &trans        &trans      &trans  &trans
                                          &trans        &trans        &trans               &trans  &trans   &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
